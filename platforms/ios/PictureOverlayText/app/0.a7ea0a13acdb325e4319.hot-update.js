webpackHotUpdate(0,{

/***/ "./home/home.component.html":
/***/ (function(module, exports) {

module.exports = "<ActionBar class=\"action-bar\">\n    <Label text=\"Happy Birthday Pooja!\" class=\"actionBarLabel\"></Label>\n</ActionBar>\n\n\n<GridLayout tkExampleTitle tkToggleNavButton>\n\t<StackLayout row=\"0\" class=\"messagesStack\">\n        <StackLayout *ngIf=\"tab == 0\">\n            <GridLayout verticalAlignment=\"top\">\n                <Label text=\"Happy Birthday!\" class=\"birthdayMessage\"></Label>\n            </GridLayout>\n            <GridLayout backgroundColor=\"White\">\n                <GridLayout>\n                    <ios>\n                        <Image src=\"{{ '~/assets/images/Pooja.jpg' }}\" stretch=\"aspectFill\"></Image>\n                    </ios>\n                    <android>\n                        <Image src=\"{{ '~/assets/images/Pooja.jpg' }}\" stretch=\"aspectFill\" height=\"350\"></Image>\n\n                        <!-- <FrescoDrawee horizontalAlignment=\"stretch\" height=\"180\"\n                            imageUri=\"{{ item.imageSrc }}\"></FrescoDrawee> -->\n                    </android>\n                </GridLayout>\n            </GridLayout>\n        </StackLayout>\n        <StackLayout *ngIf=\"tab == 1 && !messagePhotoArray_28\">\n            <Label text=\"You're not 28 yet! Come back when you are :)\" class=\"birthdayMessage\"></Label>\n        </StackLayout>\n        <RadListView [items]=\"messagePhotoArray_28\" marginRight=\"-2\" *ngIf=\"tab == 1\">\n            <ListViewGridLayout tkListViewLayout scrollDirection=\"Vertical\"\n                itemHeight=\"200\" spanCount=\"1\">\n            </ListViewGridLayout>\n            <ng-template tkListItemTemplate let-item=\"item\">\n                <GridLayout backgroundColor=\"White\">\n                    <GridLayout>\n                        <ios>\n                            <Image src=\"{{ item.photo }}\" stretch=\"aspectFill\"></Image>\n                        </ios>\n                        <android>\n                            <Image src=\"{{ item.photo }}\" stretch=\"aspectFill\"\n                                height=\"350\"></Image>\n\n                            <!-- <FrescoDrawee horizontalAlignment=\"stretch\" height=\"180\"\n                                imageUri=\"{{ item.imageSrc }}\"></FrescoDrawee> -->\n                        </android>\n                        <GridLayout height=\"{{ item.messageHeight }}\" verticalAlignment=\"bottom\" (tap)=\"switchMessageExpanded(item)\">\n                            <StackLayout paddingTop=\"8\" paddingBottom=\"8\" [ngClass]=\"{'messageExpanded': item.messageExpanded}\"\n                                paddingLeft=\"16\" paddingRight=\"16\" class=\"messageBox\">\n                                <Label text=\"{{ item.name }}\" class=\"messageName\"></Label>\n                                <Label text=\"{{ item.message }}\" class=\"messageMessage\" *ngIf=\"item.messageExpanded == true\"></Label>\n                            </StackLayout>\n                        </GridLayout>\n                    </GridLayout>\n                </GridLayout>\n            </ng-template>\n        </RadListView>\n        <StackLayout *ngIf=\"tab == 2 && !messagePhotoArray_29\">\n            <Label text=\"You're not 29 yet! Come back when you are :)\" class=\"birthdayMessage\"></Label>\n        </StackLayout>\n        <RadListView [items]=\"messagePhotoArray_29\" marginRight=\"-2\" *ngIf=\"tab == 2\">\n            <ListViewGridLayout tkListViewLayout scrollDirection=\"Vertical\"\n                itemHeight=\"200\" spanCount=\"1\">\n            </ListViewGridLayout>\n            <ng-template tkListItemTemplate let-item=\"item\">\n                <GridLayout backgroundColor=\"White\">\n                    <GridLayout>\n                        <ios>\n                            <Image src=\"{{ item.photo }}\" stretch=\"aspectFill\"></Image>\n                        </ios>\n                        <android>\n                            <Image src=\"{{ item.photo }}\" stretch=\"aspectFill\"\n                                height=\"350\"></Image>\n\n                            <!-- <FrescoDrawee horizontalAlignment=\"stretch\" height=\"180\"\n                                imageUri=\"{{ item.imageSrc }}\"></FrescoDrawee> -->\n                        </android>\n                        <GridLayout height=\"{{ item.messageHeight }}\" verticalAlignment=\"bottom\" (tap)=\"switchMessageExpanded(item)\">\n                            <StackLayout paddingTop=\"8\" paddingBottom=\"8\" [ngClass]=\"{'messageExpanded': item.messageExpanded}\"\n                                paddingLeft=\"16\" paddingRight=\"16\" class=\"messageBox\">\n                                <Label text=\"{{ item.name }}\" class=\"messageName\"></Label>\n                                <Label text=\"{{ item.message }}\" class=\"messageMessage\" *ngIf=\"item.messageExpanded == true\"></Label>\n                            </StackLayout>\n                        </GridLayout>\n                    </GridLayout>\n                </GridLayout>\n            </ng-template>\n        </RadListView>\n        <StackLayout *ngIf=\"tab == 3 && !messagePhotoArray_30\">\n            <Label text=\"You're not 30 yet! Come back when you are :)\" class=\"birthdayMessage\"></Label>\n        </StackLayout>\n        <RadListView [items]=\"messagePhotoArray_30\" marginRight=\"-2\" *ngIf=\"tab == 3\">\n            <ListViewGridLayout tkListViewLayout scrollDirection=\"Vertical\"\n                itemHeight=\"200\" spanCount=\"1\">\n            </ListViewGridLayout>\n            <ng-template tkListItemTemplate let-item=\"item\">\n                <GridLayout backgroundColor=\"White\">\n                    <GridLayout>\n                        <ios>\n                            <Image src=\"{{ item.photo }}\" stretch=\"aspectFill\"></Image>\n                        </ios>\n                        <android>\n                            <Image src=\"{{ item.photo }}\" stretch=\"aspectFill\"\n                                height=\"350\"></Image>\n\n                            <!-- <FrescoDrawee horizontalAlignment=\"stretch\" height=\"180\"\n                                imageUri=\"{{ item.imageSrc }}\"></FrescoDrawee> -->\n                        </android>\n                        <GridLayout height=\"{{ item.messageHeight }}\" verticalAlignment=\"bottom\" (tap)=\"switchMessageExpanded(item)\">\n                            <StackLayout paddingTop=\"8\" paddingBottom=\"8\" [ngClass]=\"{'messageExpanded': item.messageExpanded}\"\n                                paddingLeft=\"16\" paddingRight=\"16\" class=\"messageBox\">\n                                <Label text=\"{{ item.name }}\" class=\"messageName\"></Label>\n                                <Label text=\"{{ item.message }}\" class=\"messageMessage\" *ngIf=\"item.messageExpanded == true\"></Label>\n                            </StackLayout>\n                        </GridLayout>\n                    </GridLayout>\n                </GridLayout>\n            </ng-template>\n        </RadListView>\n    </StackLayout>\n\n    \n\t<BottomBar row=\"1\" (tabSelected)=\"tabSelected($event)\"></BottomBar>\n</GridLayout>"

/***/ })

})
//# sourceMappingURL=data:application/json;charset=utf-8;base64,